// Pin definitions for PIR motion sensor and LED
const int pirPin = 3, motionLedPin = 13;
// Pin definitions for Tilt sensor and LED
const int tiltPin = 2, tiltLedPin = 10;

// Volatile variables to store sensor states (updated in interrupts)
volatile int motionDetected = 0, tiltDetected = 0;

// Variables to track previous states to avoid redundant Serial prints
int prevMotionState = 0, prevTiltState = 0;
int prevMotionLedState = 0, prevTiltLedState = 0;

// Interrupt Service Routine (ISR) for PIR motion sensor
void motionISR() {
  motionDetected = digitalRead(pirPin);
}

// Interrupt Service Routine (ISR) for Tilt sensor
void tiltISR() {
  tiltDetected = digitalRead(tiltPin);
}

void setup() {
  // Configure sensor pins
  pinMode(pirPin, INPUT);
  pinMode(tiltPin, INPUT_PULLUP);

  // Configure LED pins
  pinMode(motionLedPin, OUTPUT);
  pinMode(tiltLedPin, OUTPUT);

  // Initialize Serial Monitor
  Serial.begin(9600);

  // Attach interrupts to sensors, triggering on state change
  attachInterrupt(digitalPinToInterrupt(pirPin), motionISR, CHANGE);
  attachInterrupt(digitalPinToInterrupt(tiltPin), tiltISR, CHANGE);
}

void loop() {
  // Update LED states based on sensor readings
  digitalWrite(motionLedPin, motionDetected);
  digitalWrite(tiltLedPin, tiltDetected);

  // Print only when motion state changes
  if (motionDetected != prevMotionState) {
    Serial.println(motionDetected ? "Motion detected!" : "Motion stopped.");
    prevMotionState = motionDetected; // Update previous state
  }

  // Print only when tilt state changes
  if (tiltDetected != prevTiltState) {
    Serial.println(tiltDetected ? "Tilt detected!" : "Tilt stopped.");
    prevTiltState = tiltDetected; // Update previous state
  }

  // Print only when Motion LED state changes
  if (digitalRead(motionLedPin) != prevMotionLedState) {
    Serial.println(digitalRead(motionLedPin) ? "Motion LED is ON" : "Motion LED is OFF");
    prevMotionLedState = digitalRead(motionLedPin); // Update previous LED state
  }

  // Print only when Tilt LED state changes
  if (digitalRead(tiltLedPin) != prevTiltLedState) {
    Serial.println(digitalRead(tiltLedPin) ? "Tilt LED is ON" : "Tilt LED is OFF");
    prevTiltLedState = digitalRead(tiltLedPin); // Update previous LED state
  }
}
